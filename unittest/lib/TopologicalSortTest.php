<?php
require_once 'PHPUnit/Framework.php';

require_once '../../lib/TopologicalSort.php';

/**
 * Test class for TopologicalSort.
 * Generated by PHPUnit on 2010-10-09 at 06:06:25.
 */
class TopologicalSortTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    TopologicalSort
     * @access protected
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        $this->ts = new TopologicalSort;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testSet_required().
     */
    public function testSet_required()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSort().
     */
    public function testSort()
    {
        $classes = array('init' => array("require" => array(),
                                         "required" => array()),
                         'load_site' => array("require" => array("init"),
                                              "required" => array("load_page")),
                         'load_page' => array("required" => array("getUser"),
                                              "require" => array()),
                         'getUser' => array("require" => array(),
                                            "required" => array()));
                         
        $this->ts->setNode($classes);        
        $res = $this->ts->sort();
        $this->assertEquals($res, array("init", "load_site", "load_page", "getUser"));
        var_dump($res);
        $classes = array("getUser" => array("require" => array(),
                                            "required" => array()),
                         "init" => array("require" => array(),
                                         "required" => array()),
                         "hoge" => array("require" => array(),
                                         "required" => array()));

        $this->ts->setNode($classes);        
        $res = $this->ts->sort();
        var_dump($res);

        $classes = array('init' => array("require" => array(),
                                         "required" => array()),
                         'load_site' => array("require" => array("init"),
                                              "required" => array()),
                         'load_page' => array("required" => array("getUser"),
                                              "require" => array()),
                         'getUser' => array("require" => array(),
                                            "required" => array()));

        $this->ts->setNode($classes);        
        $res = $this->ts->sort();
        var_dump($res);

    }

    /**
     * @todo Implement testGetRootNodes().
     */
    public function testGetRootNodes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDependencyList().
     */
    public function testGetDependencyList()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetNewNode().
     */
    public function testGetNewNode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
